*&---------------------------------------------------------------------*
*& Include          ZCOCKPIT_ROT
*&---------------------------------------------------------------------*


FORM get_data.

  IF so_dtped IS NOT INITIAL.

    LOOP AT so_dtped INTO DATA(ls_data).
      ls_data-high = sy-datum.
      so_dtped-high = ls_data-high.
      MODIFY so_dtped FROM ls_data.
    ENDLOOP.

    IF p_tpedid IS INITIAL.
      p_tpedid = 'NB'.
    ENDIF.

    SELECT a~ebeln, b~ebelp, a~aedat, b~matnr, c~maktx, b~menge, b~meins, b~netpr, b~werks, b~lgort,
        a~ekorg, a~ekgrp, a~bukrs
        FROM ekko AS a
        INNER JOIN ekpo AS b ON a~ebeln = b~ebeln
        INNER JOIN makt AS c ON b~matnr = c~matnr
        INTO CORRESPONDING FIELDS OF TABLE @gt_data
        WHERE a~frgrl = 'X' " campo indicador de liberação
        AND a~aedat IN @so_dtped
        AND a~bsart = @p_tpedid
        AND a~ebeln IN @so_nped .
  ELSE.
    SELECT a~ebeln, b~ebelp, a~aedat, b~matnr, c~maktx, b~menge, b~meins, b~netpr, b~werks, b~lgort,
        a~ekorg, a~ekgrp, a~bukrs
        FROM ekko AS a
        INNER JOIN ekpo AS b ON a~ebeln = b~ebeln
        INNER JOIN makt AS c ON b~matnr = c~matnr
        INTO CORRESPONDING FIELDS OF TABLE @gt_data
        WHERE a~frgrl = 'X'. " campo indicador de liberação

  ENDIF.
ENDFORM.

FORM pf_status_1.
  SET PF-STATUS 'STANDARD'.
ENDFORM.

FORM display_alv.

  data: lt_fieldcat TYPE lvc_t_fcat,
        ls_fieldcat TYPE lvc_s_fcat.

  TRY.
      CALL METHOD cl_salv_table=>factory
        IMPORTING
          r_salv_table = lo_alv                          " Basis Class Simple ALV Tables
        CHANGING
          t_table      = gt_data.
    CATCH cx_salv_msg. " ALV: General Error Class with Message
*  CATCH cx_salv_msg. " ALV: General Error Class with Message
  ENDTRY.

  " PF STATUS ANTES DO DISPLAY DA ALV

  lo_alv->set_screen_status(
    EXPORTING
      report        = sy-repid                 " ABAP Program: Current Master Program
      pfstatus      = 'STANDARD'                 " Screens, Current GUI Status
      set_functions = cl_salv_table=>c_functions_all
  ).

  IF lo_alv IS NOT INITIAL.
    lo_alv->get_functions( )->set_all( abap_true ).
    lo_alv->display( ).

  ENDIF.

ENDFORM.

FORM liberar_pedido.


endform.

FORM user_command_1.
  CASE sy-ucomm.
    WHEN 'LIBERAR'.
      PERFORM liberar_pedido.
  ENDCASE.

ENDFORM.
